name: Bundle

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

concurrency:
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  bundle_deb:
    name: Bundle DEB (${{ matrix.target }})
    strategy:
      fail-fast: false
      matrix:
        # target: ['i686-unknown-linux-gnu', 'x86_64-unknown-linux-gnu']
        target: ['x86_64-unknown-linux-gnu']
    runs-on: ubuntu-latest
    container:
      image: ivangabriele/tauri:debian-bullseye-18
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          targets: ${{ matrix.target }}
          toolchain: 1.80
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: 22
      - name: Install
        run: yarn
      - name: Bundle
        run: yarn bundle:deb --target ${{ matrix.target }}
        env:
          TARGET: ${{ matrix.target }}
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ci-release-deb
          path: src-tauri/target/${{ matrix.target }}release/bundle/deb/*.deb
          retention-days: 1

  bundle_dmg:
    name: Bundle DMG (${{ matrix.target }})
    strategy:
      fail-fast: false
      matrix:
        target: ['aarch64-apple-darwin']
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          targets: ${{ matrix.target }}
          toolchain: 1.80
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: 22
      - name: Install
        run: yarn
      - name: Bundle
        run: yarn bundle:dmg --target ${{ matrix.target }}
        env:
          TARGET: ${{ matrix.target }}
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ci-release-dmg
          path: src-tauri/targe/${{ matrix.target }}/release/bundle/dmg/*.dmg
          retention-days: 1

  bundle_msi:
    name: Bundle MSI (${{ matrix.target }})
    strategy:
      fail-fast: false
      matrix:
        # target: ['arm64ec-pc-windows-msvc', 'i686-pc-windows-msvc', 'x86_64-pc-windows-msvc']
        target: ['i686-pc-windows-msvc', 'x86_64-pc-windows-msvc']
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false
      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          targets: ${{ matrix.target }}
          toolchain: 1.80
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: 22
      - name: Install
        run: yarn
      - name: Bundle
        run: yarn bundle:msi --target ${{ matrix.target }}
        env:
          TARGET: ${{ matrix.target }}
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ci-release-msi
          path: src-tauri/target/${{ matrix.target }}release/bundle/msi/*.msi
          retention-days: 1

  # bundle_msi_arm64:
  #   name: Bundle MSI (arm64ec-pc-windows-msvc)
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: false
  #     - name: Setup Rust
  #       uses: dtolnay/rust-toolchain@master
  #       with:
  #         targets: 'arm64ec-pc-windows-msvc'
  #         toolchain: nightly
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         cache: yarn
  #         node-version: 22
  #     - name: Install
  #       run: yarn
  #     - name: Bundle
  #       run: yarn bundle:msi --target arm64ec-pc-windows-msvc
  #       env:
  #         TARGET: 'arm64ec-pc-windows-msvc'
  #     - name: Upload
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ci-release-msi
  #         path: src-tauri/target/release/bundle/msi/*.msi
  #         retention-days: 1
